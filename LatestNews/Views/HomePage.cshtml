@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.HomePage>
@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web.Models;
@{
	Layout = "master.cshtml";
}


			<!-- This is where we're going to render our content -->

			<div class="row section">
				<div class="col-md-12">
					
					@Model.Value("bodyText")

				</div>				
			</div>

		</div>

		<!-- Grey Banner -->
		<div class="container-fluid grey-bg">
			<div class="container">
				<div class="row section">
					<div class="col-md-8">
						
						<h2>@Model.Value("gBHeading")</h2>
						
						@Model.Value("gBContent")
						
					</div>
					<div class="col-md-4">
						
						@{
							var typedMediaPickerSingle = Model.Value<IPublishedContent>("gBImage");
							if (typedMediaPickerSingle != null)
							{
								<img src="@typedMediaPickerSingle.Url" class="img-fluid" alt="@typedMediaPickerSingle.Value("alt")" />
							}
						}
					</div>
				</div>
			</div>
		</div>

		<!-- Blog section -->
		<div class="container">

			<div class="row section">
				<div class="col-md-12">
					<h1>Latest from the blog</h1>
				</div>

				<!-- Blog Post query goes here. -->
				
			</div>
        
        @Html.Partial("Blog-Posts")
        
		</div>

		<!-- Call to Action -->
		<div class="container-fluid orange-bg">
			<div class="container">

				<div class="row section">
					<div class="col-md-12 text-center">
						
						<h1>@Model.Value("cTAHeading")</h1>
						<p>@Model.Value("cTAText") <br/><br/></p>
						
						
						@{
							var link = Model.Value<Link>("cTALink");
							if (link != null)
							{
								<a href="@link.Url" class="btn btn-inverted-orange" role="button" target="@link.Target">@Model.Value("cTALinkText")</a>
							}
						}
						
					
					</div>
				</div>

			</div>
		</div>

	